Solver for the Aquaculture Service Vessel Routing Problem


The code featured in this project is used to generate and solve test instances for the Aquaculture Service Vessel 
Routing Problem. 

Structure: 

(...)
result
	result_files
test_instances
weather_files
(...)

- In result_files, you have to save a csv file "result_instances.csv" and then gurobi variables such as computational time, gap etc. will be saved to this file for each run
- You have to save all test instances you want to use in test_instances and all weather data text files you want to use in weather_files


To set up the project the user must include installation of these java extensions: 

commons-math3-3.6.1
gurobi
opencsv-5.0


To run the solver, please refer to the following: 

1. Assuming that the user use one of the pregenerated test instances and pregenerated weather files:

1.1 Fill in the required information in the parameter file

	- Number of fish farming location in the test instance
	- Filepath of the weather-file
	- Filepath of the test-instance
	- Preferred name of the routing file generated by the algorithm
	- Number of days in the planning period

1.2 Run model on either the basic model or the extended model.


2. Assuming that the user wants to generate their own test instances this can be done in the OperationGenerator class: 

2.1 Fill in which locations to plan for. The number corresponds with the location number indicated in Appendix B in the
    project report. 

2.2 Fill inn number of days to generate tasks for.

2.3 Choose filepath for the generated test instance. 


3. Assuming that the user wants to generate their own weather file using the python code:

3.1 Run retrieve_data.py, in order to inport the Climate Data Store API we refer the reader to 
https://cds.climate.copernicus.eu/api-how-to    

3.2 Run read_netcdf.py with the output netcdf file from the previous step and you will get a text file with all
    average significant wave heights. 









